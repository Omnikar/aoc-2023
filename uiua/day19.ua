+@\0&ru0 0
°{⊙∘}⊜(□⊜□≠@\n.)¬⌕"\n\n".

↻⊢⊚∵⊔(≍"in"↙2).  # Rotate so "in" state is first
⊂{"R{R}""A{A}"}  # Add stable reject and accept states
:¤¤∵⊔(∩□⊃↙↘⊗@{.) # Separate labels and rules
≡(
  ⊜□≠@,.↘¯1↘1°□
  ⍜(°□⊢⇌|⊂"x<∞:") # Give default always true predicate
  □≡(
    ⊃↙(⊗□↘+1)⊗@:.°□ # Look up label indices
    ⊃(⊗:"xmas"⊢|=@>⊡1|⋕↘2)
    [⊙⊙⊙∘] # [x|m|a|s <|> value next]
  )
)
Rules ← # [R A in …]
≡⊔(⊜⋕∊,+@0⇡10)
Parts ←

UpdateOne ← ≡(
  ∩⊡⊙(Parts|Rules)
  :⊙:≡⊃↙⊡3°□:¤
  ≡(⊡:⊙°[⊙⊙∘])
  ⊡⊢⊚<∩×,:-¬.:
)⇡⧻.
PartOne ← /+♭▽:Parts⍢UpdateOne(/↥>1)↯⧻Parts2

UpdateTwo ← (
  ⊃⊢(↘1)
  °{⊙∘}
  °□⊡:Rules
  ⊙:≡⊃↙⊡3
  ⊙⊙(↯0_4_2[])
  ∧(
    :⊙°[⊙⊙∘]:
    ⊃(⊟⊙⊃(,⊙¬)⋅+|⊟⊙⊃,⋅+)
    ⊙⊂∩⍜⊡(⍜∩×↥,:-¬.:)
  )
  ⊂:▽⊃≡(/↧≡/<)≡(⊟:∩□)⇌◌
  ∩▽⊙,⊃=>1≡°□≡⊢.
  ⊙+:/+≡(/×≡/-⊔≡⇌⊢⇌)
)
PartTwo ← ◌⍢UpdateTwo(±⧻)¤{2[⍥4001_1]4}0

(PartOne|PartTwo) -1⋕⊡1&args
